services:
  backend:
    image: backend
    build:
      context: .
      dockerfile: Backend/Dockerfile
    ports:
      - "8081:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=coworkify;Username=postgres;Password=1234567890
      - Jwt__SigningKey=fkldjsklafiojriuhfkhrkanfioueujhroj
      - Jwt__Issuer=http://0.0.0.0:8080
      - Jwt__Audience=http://0.0.0.0:8080
    depends_on:
      db:
        condition: service_healthy
    networks:
      - coworkify-network
  
  db:
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234567890
      POSTGRES_DB: coworkify
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - coworkify-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  coworkify-network: